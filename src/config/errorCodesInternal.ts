export default {
    'I-00000': {
        internalInfo: 'success',
        correspondingParts: 'All',
        externalErrorCode: 'E-00000',
        internalRemarks: '',
    },
    'I-00001': {
        internalInfo: 'Unauthorized visit',
        correspondingParts: 'Auth',
        externalErrorCode: 'E-00001',
        internalRemarks: '',
    },
    'I-00002': {
        internalInfo: 'Database error when selecting in pending_list',
        correspondingParts: 'Pay Card',
        externalErrorCode: 'E-00002',
        internalRemarks: '',
    },
    'I-00003': {
        internalInfo: 'Pending list record with this pending_list_id does not exist',
        correspondingParts: 'Pay Card',
        externalErrorCode: 'E-00003',
        internalRemarks: '',
    },
    'I-00004': {
        internalInfo: 'pending list does not belongs to this clinic',
        correspondingParts: 'Pay Card',
        externalErrorCode: 'E-00004',
        internalRemarks: '',
    },
    'I-00005': {
        internalInfo: 'Database error when selecting in self_defined_verify_card',
        correspondingParts: 'Pay Card',
        externalErrorCode: 'E-00005',
        internalRemarks: '',
    },
    'I-00006': {
        internalInfo: 'self_defined_verify_card record with this id does not exist',
        correspondingParts: 'Pay Card',
        externalErrorCode: 'E-00006',
        internalRemarks: '',
    },
    'I-00007': {
        internalInfo: 'Database error when selecting in record',
        correspondingParts: 'Pay Card',
        externalErrorCode: 'E-00007',
        internalRemarks: '',
    },
    'I-00008': {
        internalInfo: 'Database error when updating self_defined_verify_card',
        correspondingParts: 'Pay Card',
        externalErrorCode: 'E-00008',
        internalRemarks: '',
    },
    'I-00009': {
        internalInfo: 'Database error when selecting in record',
        correspondingParts: 'Pay Card',
        externalErrorCode: 'E-00009',
        internalRemarks: '',
    },
    'I-00010': {
        internalInfo: 'Duplicate voucher number. Increasement cannot solve',
        correspondingParts: 'Pay Card',
        externalErrorCode: 'E-00010',
        internalRemarks: '',
    },
    'I-00011': {
        internalInfo: 'Failed to insert data into the table record',
        correspondingParts: 'Pay Card',
        externalErrorCode: 'E-00011',
        internalRemarks: '',
    },
    'I-00012': {
        internalInfo: 'Failed to delete data from the table pending_list',
        correspondingParts: 'Pay Card',
        externalErrorCode: 'E-00012',
        internalRemarks: '',
    },
    'I-00013': {
        internalInfo: 'Database error when selecting in self_defined_verify_card',
        correspondingParts: 'Pay Card',
        externalErrorCode: 'E-00013',
        internalRemarks: '',
    },
    'I-00014': {
        internalInfo: 'Database error when updating self_defined_verify_card',
        correspondingParts: 'Pay Card',
        externalErrorCode: 'E-00014',
        internalRemarks: '',
    },
    'I-00015': {
        internalInfo: 'Database error when selecting in insurer',
        correspondingParts: 'Pay Card',
        externalErrorCode: 'E-00015',
        internalRemarks: '',
    },
    'I-00016': {
        internalInfo: 'Database error when selecting in insurer_plan_agreedfee',
        correspondingParts: 'Pay Card',
        externalErrorCode: 'E-00016',
        internalRemarks: '',
    },
    'I-00017': {
        internalInfo: 'failed when calling submit claim',
        correspondingParts: 'Pay Card',
        externalErrorCode: 'E-00017',
        internalRemarks: '',
    },
    'I-00018': {
        internalInfo: 'Database error when updating record',
        correspondingParts: 'Pay Card',
        externalErrorCode: 'E-00018',
        internalRemarks: '',
    },
    'I-00019': {
        internalInfo: 'failed when calling getname',
        correspondingParts: 'Pay Card',
        externalErrorCode: 'E-00019',
        internalRemarks: '',
    },
    'I-00020': {
        internalInfo: 'The insurer prefix of the payment code does not match with the verify code; Or system cannot find such pending list item. Try check prefix of the code and F5 refresh',
        correspondingParts: 'Pay QR',
        externalErrorCode: 'E-00020',
        internalRemarks: '',
    },
    'I-00021': {
        internalInfo: 'Pending list record with this pending_list_id does not exist',
        correspondingParts: 'Pay QR',
        externalErrorCode: 'E-00021',
        internalRemarks: '',
    },
    'I-00022': {
        internalInfo: 'No empty diagnosis',
        correspondingParts: 'Pay QR',
        externalErrorCode: 'E-00022',
        internalRemarks: '',
    },
    'I-00023': {
        internalInfo: 'Cannot find doctor insurer info in db',
        correspondingParts: 'Pay QR',
        externalErrorCode: 'E-00023',
        internalRemarks: '',
    },
    'I-00024': {
        internalInfo: 'failed when calling modify url',
        correspondingParts: 'Pay QR',
        externalErrorCode: 'E-00024',
        internalRemarks: '',
    },
    'I-00025': {
        internalInfo: 'ResponseEngMessage or ResponseChiMessage is missing',
        correspondingParts: 'Pay QR',
        externalErrorCode: 'E-00025',
        internalRemarks: '',
    },
    'I-00026': {
        internalInfo: 'Database error when selecting in insurer',
        correspondingParts: 'Pay QR',
        externalErrorCode: 'E-00026',
        internalRemarks: '',
    },
    'I-00027': {
        internalInfo: 'Database error when selecting in record',
        correspondingParts: 'Pay QR',
        externalErrorCode: 'E-00027',
        internalRemarks: '',
    },
    'I-00028': {
        internalInfo: 'Duplicate voucher number. Increasement cannot solve',
        correspondingParts: 'Pay QR',
        externalErrorCode: 'E-00028',
        internalRemarks: '',
    },
    'I-00029': {
        internalInfo: 'Failed to insert data into the table record',
        correspondingParts: 'Pay QR',
        externalErrorCode: 'E-00029',
        internalRemarks: '',
    },
    'I-00030': {
        internalInfo: 'Failed to delete data from the table pending_list',
        correspondingParts: 'Pay QR',
        externalErrorCode: 'E-00030',
        internalRemarks: '',
    },
    'I-00031': {
        internalInfo: 'failed when calling getname',
        correspondingParts: 'Pay QR',
        externalErrorCode: 'E-00031',
        internalRemarks: '',
    },
    'I-00032': {
        internalInfo: 'errCode is missing',
        correspondingParts: 'Pay QR',
        externalErrorCode: 'E-00032',
        internalRemarks: '',
    },
    'I-00033': {
        internalInfo: 'lack of verify fields',
        correspondingParts: 'Verify',
        externalErrorCode: 'E-00033',
        internalRemarks: '',
    },
    'I-00034': {
        internalInfo: 'lack of verify fields',
        correspondingParts: 'Verify',
        externalErrorCode: 'E-00034',
        internalRemarks: '',
    },
    'I-00035': {
        internalInfo: 'Database Error',
        correspondingParts: 'Verify',
        externalErrorCode: 'E-00035',
        internalRemarks: '',
    },
    'I-00036': {
        internalInfo: 'Internal Error',
        correspondingParts: 'Verify',
        externalErrorCode: 'E-00036',
        internalRemarks: '',
    },
    'I-00037': {
        internalInfo: 'Verify Type Error',
        correspondingParts: 'Verify',
        externalErrorCode: 'E-00037',
        internalRemarks: '',
    },
    'I-00038': {
        internalInfo: 'Error sending data to third party',
        correspondingParts: 'Verify',
        externalErrorCode: 'E-00038',
        internalRemarks: '',
    },
    'I-00039': {
        internalInfo: 'Service Error - SPL no credit service',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00039',
        internalRemarks: '',
    },
    'I-00040': {
        internalInfo: 'Service Error - no credit service',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00040',
        internalRemarks: '',
    },
    'I-00041': {
        internalInfo: 'Unsupported Insurer',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00041',
        internalRemarks: '',
    },
    'I-00042': {
        internalInfo: 'Select insurer Database error Database error',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00042',
        internalRemarks: '',
    },
    'I-00043': {
        internalInfo: 'Select Insurer Database error',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00043',
        internalRemarks: '',
    },
    'I-00044': {
        internalInfo: 'BlueCross Medical card testing Error',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00044',
        internalRemarks: '',
    },
    'I-00045': {
        internalInfo: 'Input Format Error (Member Key)',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00045',
        internalRemarks: '',
    },
    'I-00046': {
        internalInfo: "Error updating req_ticket in self_defined_verify_card'",
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00046',
        internalRemarks: '',
    },
    'I-00047': {
        internalInfo: 'Duplicate patient ID',
        correspondingParts: 'Verify NewPending',
        externalErrorCode: 'E-00047',
        internalRemarks: '',
    },
    'I-00048': {
        internalInfo: 'Select insurer Database error',
        correspondingParts: 'Verify NewPending',
        externalErrorCode: 'E-00048',
        internalRemarks: '',
    },
    'I-00049': {
        internalInfo: 'Select doctor Database error',
        correspondingParts: 'Verify NewPending',
        externalErrorCode: 'E-00049',
        internalRemarks: '',
    },
    'I-00050': {
        internalInfo: 'Select doctor_clinic_insurer Database error',
        correspondingParts: 'Verify NewPending',
        externalErrorCode: 'E-00050',
        internalRemarks: '',
    },
    'I-00051': {
        internalInfo: 'Select pending_list Database error Database error',
        correspondingParts: 'Verify NewPending',
        externalErrorCode: 'E-00051',
        internalRemarks: '',
    },
    'I-00052': {
        internalInfo: 'Create pending_list Database error',
        correspondingParts: 'Verify NewPending',
        externalErrorCode: 'E-00052',
        internalRemarks: '',
    },
    'I-00053': {
        internalInfo: 'Select doctor_clinic_insurer Database error.Cannot find doctor insurer info in db',
        correspondingParts: 'Verify QR',
        externalErrorCode: 'E-00053',
        internalRemarks: '',
    },
    'I-00054': {
        internalInfo: 'QR Testing Error',
        correspondingParts: 'Verify QR',
        externalErrorCode: 'E-00054',
        internalRemarks: '',
    },
    'I-00055': {
        internalInfo: 'Invalid input token',
        correspondingParts: 'Verify QR',
        externalErrorCode: 'E-00055',
        internalRemarks: '',
    },
    'I-00056': {
        internalInfo: 'API Response',
        correspondingParts: 'Pay QR',
        externalErrorCode: 'E-00056',
        internalRemarks: '',
    },
    'I-00057': {
        internalInfo: 'gen_voucher_succes',
        correspondingParts: 'Pay Card',
        externalErrorCode: 'E-00057',
        internalRemarks: '',
    },
    'I-00058': {
        internalInfo: 'verify fail',
        correspondingParts: 'Pay Card',
        externalErrorCode: 'E-00058',
        internalRemarks: '',
    },
    'I-00059': {
        internalInfo: 'No empty diagnosis',
        correspondingParts: 'Pay Card',
        externalErrorCode: 'E-00059',
        internalRemarks: '',
    },
    'I-00060': {
        internalInfo: 'internal_error',
        correspondingParts: 'Pre-Pay Verify',
        externalErrorCode: 'E-00060',
        internalRemarks: '',
    },
    'I-00061': {
        internalInfo: 'unmatched clinic_id',
        correspondingParts: 'Pre-Pay Verify',
        externalErrorCode: 'E-00061',
        internalRemarks: '',
    },
    'I-00062': {
        internalInfo: 'failed when calling getname',
        correspondingParts: 'Get Name',
        externalErrorCode: 'E-00062',
        internalRemarks: '',
    },
    'I-00063': {
        internalInfo: 'Database error when selecting in record',
        correspondingParts: 'Refund Card',
        externalErrorCode: 'E-00063',
        internalRemarks: '',
    },
    'I-00064': {
        internalInfo: 'Cannot repeat refunding the record',
        correspondingParts: 'Refund QR',
        externalErrorCode: 'E-00064',
        internalRemarks: '',
    },
    'I-00065': {
        internalInfo: 'Database error when selecting in clinic',
        correspondingParts: 'Refund QR',
        externalErrorCode: 'E-00065',
        internalRemarks: '',
    },
    'I-00066': {
        internalInfo: 'Error occurs during bcrypt.compare',
        correspondingParts: 'Refund QR',
        externalErrorCode: 'E-00066',
        internalRemarks: '',
    },
    'I-00067': {
        internalInfo: 'Database error when selecting in record',
        correspondingParts: 'Refund QR',
        externalErrorCode: 'E-00067',
        internalRemarks: '',
    },
    'I-00068': {
        internalInfo: 'invalid operation password',
        correspondingParts: 'Refund QR',
        externalErrorCode: 'E-00068',
        internalRemarks: '',
    },
    'I-00069': {
        internalInfo: 'invalid transaction status',
        correspondingParts: 'Refund QR',
        externalErrorCode: 'E-00069',
        internalRemarks: '',
    },
    'I-00070': {
        internalInfo: 'voucher does not belong to this clinic',
        correspondingParts: 'Refund QR',
        externalErrorCode: 'E-00070',
        internalRemarks: '',
    },
    'I-00071': {
        internalInfo: 'This is a dummy response for testing clinics',
        correspondingParts: 'Refund QR',
        externalErrorCode: 'E-00071',
        internalRemarks: '',
    },
    'I-00072': {
        internalInfo: 'Database error when selecting in insurer',
        correspondingParts: 'Refund QR',
        externalErrorCode: 'E-00072',
        internalRemarks: '',
    },
    'I-00073': {
        internalInfo: 'failed when calling insurer api',
        correspondingParts: 'Refund QR',
        externalErrorCode: 'E-00073',
        internalRemarks: '',
    },
    'I-00074': {
        internalInfo: 'ResponseEngMessage or ResponseChiMessage is missing',
        correspondingParts: 'Refund QR',
        externalErrorCode: 'E-00074',
        internalRemarks: '',
    },
    'I-00075': {
        internalInfo: 'errCode is missing',
        correspondingParts: 'Refund QR',
        externalErrorCode: 'E-00075',
        internalRemarks: '',
    },
    'I-00076': {
        internalInfo: 'Database error when updating in record',
        correspondingParts: 'Refund QR',
        externalErrorCode: 'E-00076',
        internalRemarks: '',
    },
    'I-00077': {
        internalInfo: 'Successfully updated record status',
        correspondingParts: 'Refund QR',
        externalErrorCode: 'E-00077',
        internalRemarks: '',
    },
    'I-00078': {
        internalInfo: 'failed to update record status',
        correspondingParts: 'Refund QR',
        externalErrorCode: 'E-00078',
        internalRemarks: '',
    },
    'I-00079': {
        internalInfo: "Cannot repeat refunding the record'",
        correspondingParts: 'Refund Card',
        externalErrorCode: 'E-00079',
        internalRemarks: '',
    },
    'I-00080': {
        internalInfo: 'Database error when selecting in clinic',
        correspondingParts: 'Refund Card',
        externalErrorCode: 'E-00080',
        internalRemarks: '',
    },
    'I-00081': {
        internalInfo: 'Error occurs during bcrypt.compare()',
        correspondingParts: 'Refund Card',
        externalErrorCode: 'E-00081',
        internalRemarks: '',
    },
    'I-00082': {
        internalInfo: 'Database error when selecting in record',
        correspondingParts: 'Refund Card',
        externalErrorCode: 'E-00082',
        internalRemarks: '',
    },
    'I-00083': {
        internalInfo: 'invalid operation password',
        correspondingParts: 'Refund Card',
        externalErrorCode: 'E-00083',
        internalRemarks: '',
    },
    'I-00084': {
        internalInfo: 'invalid transaction status',
        correspondingParts: 'Refund Card',
        externalErrorCode: 'E-00084',
        internalRemarks: '',
    },
    'I-00085': {
        internalInfo: 'voucher does not belong to this clinic',
        correspondingParts: 'Refund Card',
        externalErrorCode: 'E-00085',
        internalRemarks: '',
    },
    'I-00086': {
        internalInfo: 'Database error when selecting in self_defined_verify_card',
        correspondingParts: 'Refund Card',
        externalErrorCode: 'E-00086',
        internalRemarks: '',
    },
    'I-00087': {
        internalInfo: 'failed when calling insurer api',
        correspondingParts: 'Refund Card',
        externalErrorCode: 'E-00087',
        internalRemarks: '',
    },
    'I-00088': {
        internalInfo: 'Database error when updating self_defined_verify_card',
        correspondingParts: 'Refund Card',
        externalErrorCode: 'E-00088',
        internalRemarks: '',
    },
    'I-00089': {
        internalInfo: 'Database error when updating record',
        correspondingParts: 'Refund Card',
        externalErrorCode: 'E-00089',
        internalRemarks: '',
    },
    'I-00090': {
        internalInfo: 'successfully updated record status',
        correspondingParts: 'Refund Card',
        externalErrorCode: 'E-00090',
        internalRemarks: '',
    },
    'I-00091': {
        internalInfo: 'failed to update record status',
        correspondingParts: 'Refund Card',
        externalErrorCode: 'E-00091',
        internalRemarks: '',
    },
    'I-00092': {
        internalInfo: 'failed to update req_ticket',
        correspondingParts: 'Refund Card',
        externalErrorCode: 'E-00092',
        internalRemarks: '',
    },
    'I-00093': {
        internalInfo: 'failed to update req_ticket and record status',
        correspondingParts: 'Refund Card',
        externalErrorCode: 'E-00093',
        internalRemarks: '',
    },
    'I-00094': {
        internalInfo: 'Please contact Mediconcen Limited by 9414 9216',
        correspondingParts: 'Refund Card',
        externalErrorCode: 'E-00094',
        internalRemarks: '',
    },
    'I-00095': {
        internalInfo: 'ResponseCode is missing',
        correspondingParts: 'Refund Card',
        externalErrorCode: 'E-00095',
        internalRemarks: '',
    },
    'I-00096': {
        internalInfo: 'insurerAPIResponse',
        correspondingParts: 'Refund QR',
        externalErrorCode: 'E-00096',
        internalRemarks: '',
    },
    'I-00097': {
        internalInfo: 'Wrongly submitting Pay Card request to Pay QR method',
        correspondingParts: 'Pay QR',
        externalErrorCode: 'E-00097',
        internalRemarks: '',
    },
    'I-00098': {
        internalInfo: '403 Forbidden access from outside network',
        correspondingParts: 'Get Name',
        externalErrorCode: 'E-00098',
        internalRemarks: '',
    },
    'I-00099': {
        internalInfo: 'Session has expired',
        correspondingParts: 'Session',
        externalErrorCode: 'E-00099',
        internalRemarks: '',
    },
    'I-00100': {
        internalInfo: 'Connection to node server error',
        correspondingParts: 'curl',
        externalErrorCode: 'E-00100',
        internalRemarks: '',
    },
    'I-00101': {
        internalInfo: 'Database Error ',
        correspondingParts: 'preApproval',
        externalErrorCode: 'E-00101',
        internalRemarks: '',
    },
    'I-00102': {
        internalInfo: 'Database Error ',
        correspondingParts: 'preApproval',
        externalErrorCode: 'E-00102',
        internalRemarks: '',
    },
    'I-00103': {
        internalInfo: 'Invaild Operation Password',
        correspondingParts: 'preApproval',
        externalErrorCode: 'E-00103',
        internalRemarks: '',
    },
    'I-00104': {
        internalInfo: 'Database Error ',
        correspondingParts: 'preApproval',
        externalErrorCode: 'E-00104',
        internalRemarks: '',
    },
    'I-00105': {
        internalInfo: 'Transcation Error ',
        correspondingParts: 'preApproval',
        externalErrorCode: 'E-00105',
        internalRemarks: '',
    },
    'I-00106': {
        internalInfo: 'Transcation Error ',
        correspondingParts: 'preApproval',
        externalErrorCode: 'E-00106',
        internalRemarks: '',
    },
    'I-00107': {
        internalInfo: 'Database Error ',
        correspondingParts: 'preApproval',
        externalErrorCode: 'E-00107',
        internalRemarks: '',
    },
    'I-00108': {
        internalInfo: 'Bulk Insertion error. RollBack changed',
        correspondingParts: 'BulkCommon',
        externalErrorCode: 'E-00108',
        internalRemarks: '',
    },
    'I-00109': {
        internalInfo: 'Upload file failed',
        correspondingParts: 'BulkCommon',
        externalErrorCode: 'E-00109',
        internalRemarks: '',
    },
    'I-00110': {
        internalInfo: 'No file path',
        correspondingParts: 'BulkCommon',
        externalErrorCode: 'E-00110',
        internalRemarks: '',
    },
    'I-00111': {
        internalInfo: 'Input doctor code not unique or input doctor code exists in db exit',
        correspondingParts: 'BulkInsertion',
        externalErrorCode: 'E-00111',
        internalRemarks: '',
    },
    'I-00112': {
        internalInfo: 'Input data not valid,exit. Possibilities: doctor code is null or email is null, password',
        correspondingParts: 'BulkCommon',
        externalErrorCode: 'E-00112',
        internalRemarks: '',
    },
    'I-00113': {
        internalInfo: 'invalid insurer benefits or doctor fees or location codes',
        correspondingParts: 'BulkCommon',
        externalErrorCode: 'E-00113',
        internalRemarks: '',
    },
    'I-00114': {
        internalInfo: 'Input doctor code not unique or input doctor code does not exist in db exit',
        correspondingParts: 'BulkUpdate',
        externalErrorCode: 'E-00114',
        internalRemarks: '',
    },
    'I-00115': {
        internalInfo: 'Duplicate benefit input',
        correspondingParts: 'BulkCommon',
        externalErrorCode: 'E-00115',
        internalRemarks: '',
    },
    'I-00120': {
        internalInfo: 'Input parameter error',
        correspondingParts: 'Generate Voucher',
        externalErrorCode: 'E-00120',
        internalRemarks: '',
    },
    'I-00121': {
        internalInfo: 'No Permission',
        correspondingParts: 'Generate Voucher',
        externalErrorCode: 'E-00121',
        internalRemarks: '',
    },
    'I-00122': {
        internalInfo: 'Input parameter error',
        correspondingParts: 'Pay QR',
        externalErrorCode: 'E-00122',
        internalRemarks: '',
    },
    'I-00123': {
        internalInfo: 'Input parameter error',
        correspondingParts: 'Refund QR',
        externalErrorCode: 'E-00123',
        internalRemarks: '',
    },
    'I-00150': {
        internalInfo: 'Incorrect Prefix. Please use prefix "V" AND IN English Keyboard Mode, then try again.',
        correspondingParts: 'Verify',
        externalErrorCode: 'E-00150',
        internalRemarks: '',
    },
    'I-00151': {
        internalInfo: 'Incorrect Length. Please make sure length is 12 AND IN English Keyboard Mode, then try again. ',
        correspondingParts: 'Verify',
        externalErrorCode: 'E-00151',
        internalRemarks: '',
    },
    'I-00152': {
        internalInfo: 'Cannot update doctor fee for such voucher which verified successfully and submitted failed',
        correspondingParts: 'Verify',
        externalErrorCode: 'E-00152',
        internalRemarks: '',
    },
    'I-00153': {
        internalInfo: 'Medical card member ID format incorrect. Please refer to the card image input guideline as the card image',
        correspondingParts: 'Verify',
        externalErrorCode: 'E-00153',
        internalRemarks: '',
    },
    'I-00170': {
        internalInfo: 'Cannot send QR request to blockchain.ts after creating record',
        correspondingParts: 'Pay QR',
        externalErrorCode: 'E-00170',
        internalRemarks: '',
    },
    'I-00171': {
        internalInfo: 'Unhandled Pay service exception possibly thrown from non-blockchain.ts service.',
        correspondingParts: 'Pay QR',
        externalErrorCode: 'E-00171',
        internalRemarks: '',
    },
    'I-00190': {
        internalInfo: 'Cannot send refund request to blockchain.ts after updated record',
        correspondingParts: 'Pay QR',
        externalErrorCode: 'E-00190',
        internalRemarks: '',
    },
    'I-00300': {
        internalInfo: 'Input parameter error',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00300',
        internalRemarks: '',
    },
    'I-00301': {
        internalInfo: 'Verify Token Type Error',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00301',
        internalRemarks: '',
    },
    'I-00302': {
        internalInfo: 'InsurerObj Error',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00302',
        internalRemarks: '',
    },
    'I-00303': {
        internalInfo: 'Verify Token Calculation Error',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00303',
        internalRemarks: '',
    },
    'I-00304': {
        internalInfo: 'Error sending data to third party',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00304',
        internalRemarks: '',
    },
    'I-00305': {
        internalInfo: 'Error when re-verify the pending transaction',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00305',
        internalRemarks: '',
    },
    'I-00306': {
        internalInfo: 'Select Doctor Database error',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00306',
        internalRemarks: '',
    },
    'I-00307': {
        internalInfo: 'Select Diagnosis Database error',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00307',
        internalRemarks: '',
    },
    'I-00308': {
        internalInfo: 'Insert Record Database error',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00308',
        internalRemarks: '',
    },
    'I-00309': {
        internalInfo: 'Insurer ac and password not exist ',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00309',
        internalRemarks: '',
    },
    'I-00310': {
        internalInfo: 'Select Insurer ac and password Error',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00310',
        internalRemarks: '',
    },
    'I-00311': {
        internalInfo: 'Password Decrypt Error',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00311',
        internalRemarks: '',
    },
    'I-00312': {
        internalInfo: 'Select benefit_insurer_benefit Database error',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00312',
        internalRemarks: '',
    },
    'I-00313': {
        internalInfo: 'Select benefit_insurer_benefit Empty',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00313',
        internalRemarks: '',
    },
    'I-00320': {
        internalInfo: 'Select china_life_edi_reference database error',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00320',
        internalRemarks: '',
    },
    'I-00321': {
        internalInfo: 'member_key not exist in china_life_edi_reference',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00321',
        internalRemarks: '',
    },
    'I-00322': {
        internalInfo: 'expiryDate >= currentDate && currentDate >= effectiveDate',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00322',
        internalRemarks: '',
    },
    'I-00323': {
        internalInfo: 'no quotes base on specific benefit',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00323',
        internalRemarks: '',
    },
    'I-00330': {
        internalInfo: 'Select doctor_clinic_insurer Database error',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00330',
        internalRemarks: '',
    },
    'I-00331': {
        internalInfo: 'Select doctor_clinic_insurer Empty',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00331',
        internalRemarks: '',
    },
    'I-00332': {
        internalInfo: 'Member key contains spaces and tabs etc ',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00332',
        internalRemarks: '',
    },
    'I-00333': {
        internalInfo: 'Please try again. Please input exactly the policy number on medical card, including the full-stop " . " and insert a slash " / " between policy number and insured number. ',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00333',
        internalRemarks: '',
    },
    'I-00334': {
        internalInfo: 'Please try again. Please input exactly the policy number on medical card and insert a slash " / " between policy number and insured number.',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00334',
        internalRemarks: '',
    },
    'I-00335': {
        internalInfo: 'Please try again. Please input exactly the policy number on medical card and insert a hyphen " - " in between the policy number. ',
        correspondingParts: 'Verify Card',
        externalErrorCode: 'E-00335',
        internalRemarks: '',
    },
    'I-00500': {
        internalInfo: 'Input parameter Error',
        correspondingParts: 'Pay Card',
        externalErrorCode: 'E-00500',
        internalRemarks: '',
    },
    'I-00501': {
        internalInfo: 'Pay Token is not equal to patient_id in pending list',
        correspondingParts: 'Pay Card',
        externalErrorCode: 'E-00501',
        internalRemarks: '',
    },
    'I-00502': {
        internalInfo: 'Get Pending list error',
        correspondingParts: 'Pay Card',
        externalErrorCode: 'E-00502',
        internalRemarks: '',
    },
    'I-00503': {
        internalInfo: 'update china_life_edi_upload database error',
        correspondingParts: 'Pay Card',
        externalErrorCode: 'E-00503',
        internalRemarks: '',
    },
    'I-00504': {
        internalInfo: 'Update china_life_edi_reference database error',
        correspondingParts: 'Pay Card',
        externalErrorCode: 'E-00504',
        internalRemarks: '',
    },
    'I-00600': {
        internalInfo: 'Input parameter Error',
        correspondingParts: 'Generate Token',
        externalErrorCode: 'E-00600',
        internalRemarks: '',
    },
    'I-00601': {
        internalInfo: 'General Token Generation Error',
        correspondingParts: 'Generate Token',
        externalErrorCode: 'E-00601',
        internalRemarks: '',
    },
    'I-00602': {
        internalInfo: 'getUserByAccountAndInsurer Error',
        correspondingParts: 'Generate Token',
        externalErrorCode: 'E-00602',
        internalRemarks: '',
    },
    'I-00603': {
        internalInfo: 'Prefix Code Not Found',
        correspondingParts: 'Generate Token',
        externalErrorCode: 'E-00603',
        internalRemarks: '',
    },
    'I-00604': {
        internalInfo: 'exception happens when submitting verify token or payment token to blockchain.ts',
        correspondingParts: 'Generate Token',
        externalErrorCode: 'E-00604',
        internalRemarks: '',
    },
    'I-00605': {
        internalInfo: 'blockchain.ts returns unsuccess code after submitting verify token or payment token',
        correspondingParts: 'Generate Token',
        externalErrorCode: 'E-00605',
        internalRemarks: '',
    },
    'I-00606': {
        internalInfo: 'Cannot find token generation link to call for such insurer. Check url classifier list',
        correspondingParts: 'Generate Token',
        externalErrorCode: 'E-00606',
        internalRemarks: '',
    },
    'I-00620': {
        internalInfo: 'Input parameter Error',
        correspondingParts: 'propose',
        externalErrorCode: 'E-00620',
        internalRemarks: '',
    },
    'I-00621': {
        internalInfo: 'Select insurer Database Error',
        correspondingParts: 'propose',
        externalErrorCode: 'E-00621',
        internalRemarks: '',
    },
    'I-00622': {
        internalInfo: 'Empty result with selecting insurer row in database',
        correspondingParts: 'propose',
        externalErrorCode: 'E-00622',
        internalRemarks: '',
    },
    'I-00623': {
        internalInfo: 'InsurerObj Error',
        correspondingParts: 'propose',
        externalErrorCode: 'E-00623',
        internalRemarks: '',
    },
    'I-00624': {
        internalInfo: 'Error from Third party, please read the error message',
        correspondingParts: 'propose',
        externalErrorCode: 'E-00624',
        internalRemarks: '',
    },
    'I-00625': {
        internalInfo: 'Error from Third party, please read the log message. such as request timeout',
        correspondingParts: 'propose',
        externalErrorCode: 'E-00625',
        internalRemarks: '',
    },
    'I-00626': {
        internalInfo: 'Fail to Verify because of Error Occured, Please read error log',
        correspondingParts: 'propose',
        externalErrorCode: 'E-00626',
        internalRemarks: '',
    },
    'I-00627': {
        internalInfo: 'Fail to Verify because of Third Party API Validation',
        correspondingParts: 'propose',
        externalErrorCode: 'E-00627',
        internalRemarks: '',
    },
    'I-00628': {
        internalInfo: 'The verify QR Code does not exist in database',
        correspondingParts: 'propose',
        externalErrorCode: 'E-00628',
        internalRemarks: '',
    },
    'I-00629': {
        internalInfo: 'error when searching in token table',
        correspondingParts: 'propose',
        externalErrorCode: 'E-00629',
        internalRemarks: '',
    },
    'I-00630': {
        internalInfo: 'No token member id found for the verify token provided',
        correspondingParts: 'propose',
        externalErrorCode: 'E-00630',
        internalRemarks: '',
    },
    'I-00649': {
        internalInfo: 'Cannot find insurer row via insurer id ',
        correspondingParts: 'modify',
        externalErrorCode: 'E-00649',
        internalRemarks: '',
    },
    'I-00650': {
        internalInfo: 'Input parameter Error',
        correspondingParts: 'modify',
        externalErrorCode: 'E-00650',
        internalRemarks: '',
    },
    'I-00651': {
        internalInfo: 'special error please read error log',
        correspondingParts: 'modify',
        externalErrorCode: 'E-00651',
        internalRemarks: '',
    },
    'I-00652': {
        internalInfo: 'Fail to Pay because of Third Party API Validation',
        correspondingParts: 'modify',
        externalErrorCode: 'E-00652',
        internalRemarks: '',
    },
    'I-00653': {
        internalInfo: 'The pay QR Code is expired',
        correspondingParts: 'modify',
        externalErrorCode: 'E-00653',
        internalRemarks: '',
    },
    'I-00654': {
        internalInfo: 'The pay QR Code does not exist in database',
        correspondingParts: 'modify',
        externalErrorCode: 'E-00654',
        internalRemarks: '',
    },
    'I-00655': {
        internalInfo: 'The pay QR Code has already been used',
        correspondingParts: 'modify',
        externalErrorCode: 'E-00655',
        internalRemarks: '',
    },
    'I-00656': {
        internalInfo: 'Cannot insert into db. System cannot insert record into database. Please contact MediConCen at 95316485 immediately',
        correspondingParts: 'modify',
        externalErrorCode: 'E-00656',
        internalRemarks: '',
    },
    'I-00657': {
        internalInfo: 'Cannot find such insurer id in constant.js nonBlockchainInsurerVoucherId function. Please contact MediConCen at 95316485 if you need further assistance. ',
        correspondingParts: 'modify',
        externalErrorCode: 'E-00657',
        internalRemarks: '',
    },
    'I-00658': {
        internalInfo: 'Cannot update claim status. Please refresh contact MediConCen at 95316485 if you need further assistance. ',
        correspondingParts: 'modify',
        externalErrorCode: 'E-00658',
        internalRemarks: '',
    },
    'I-00659': {
        internalInfo: 'Cannot find doctor fee in doctor_clinic_insurer table',
        correspondingParts: 'modify',
        externalErrorCode: 'E-00659',
        internalRemarks: '',
    },
    'I-00660': {
        internalInfo: 'Select insurer_account_info Database Error',
        correspondingParts: 'getTx',
        externalErrorCode: 'E-00660',
        internalRemarks: '',
    },
    'I-00661': {
        internalInfo: 'Select insurer_account_info Database Empty',
        correspondingParts: 'getTx',
        externalErrorCode: 'E-00661',
        internalRemarks: '',
    },
    'I-00662': {
        internalInfo: 'Select chaincode Database Error',
        correspondingParts: 'getTx',
        externalErrorCode: 'E-00662',
        internalRemarks: '',
    },
    'I-00663': {
        internalInfo: 'Select chaincode Database Empty',
        correspondingParts: 'getTx',
        externalErrorCode: 'E-00663',
        internalRemarks: '',
    },
    'I-00664': {
        internalInfo: 'Select record Database Empty',
        correspondingParts: 'getTx',
        externalErrorCode: 'E-00664',
        internalRemarks: '',
    },
    'I-00665': {
        internalInfo: 'getTx function Error, Please read error log',
        correspondingParts: 'getTx',
        externalErrorCode: 'E-00665',
        internalRemarks: '',
    },
    'I-00700': {
        internalInfo: 'Input parameter Error',
        correspondingParts: 'refund',
        externalErrorCode: 'E-00700',
        internalRemarks: '',
    },
    'I-00701': {
        internalInfo: 'Fail to Refund because of Third Party API Validation ',
        correspondingParts: 'refund',
        externalErrorCode: 'E-00701',
        internalRemarks: '',
    },
    'I-00702': {
        internalInfo: 'Fail to Refund because of Error Occured, Please read error log',
        correspondingParts: 'refund',
        externalErrorCode: 'E-00702',
        internalRemarks: '',
    },
    'I-00703': {
        internalInfo: 'select Insurer database error',
        correspondingParts: 'refund',
        externalErrorCode: 'E-00703',
        internalRemarks: '',
    },
    'I-00704': {
        internalInfo: 'select china_life_edi_upload empty',
        correspondingParts: 'refund',
        externalErrorCode: 'E-00704',
        internalRemarks: '',
    },
    'I-00705': {
        internalInfo: 'select china_life_edi_upload database error',
        correspondingParts: 'refund',
        externalErrorCode: 'E-00705',
        internalRemarks: '',
    },
    'I-00706': {
        internalInfo: 'unknown non-blockchain.ts refund error',
        correspondingParts: 'refund',
        externalErrorCode: 'E-00706',
        internalRemarks: '',
    },
    'I-00710': {
        internalInfo: 'Not Support Verify Type',
        correspondingParts: 'refund',
        externalErrorCode: 'E-00710',
        internalRemarks: '',
    },
    'I-00711': {
        internalInfo: 'Cannot find such clinic id',
        correspondingParts: 'refund',
        externalErrorCode: 'E-00711',
        internalRemarks: '',
    },
    'I-00712': {
        internalInfo: 'General refund QR error',
        correspondingParts: 'refund',
        externalErrorCode: 'E-00712',
        internalRemarks: '',
    },
    'I-00713': {
        internalInfo: 'General refund Card error',
        correspondingParts: 'refund card',
        externalErrorCode: 'E-00713',
        internalRemarks: '',
    },
    'I-00800': {
        internalInfo: 'Input parameter error',
        correspondingParts: 'otherFunc',
        externalErrorCode: 'E-00800',
        internalRemarks: '',
    },
    'I-00900': {
        internalInfo: 'record insertion error',
        correspondingParts: 'questionnaire system',
        externalErrorCode: 'E-00900',
        internalRemarks: '',
    },
    'I-00901': {
        internalInfo: 'input parameter error',
        correspondingParts: 'questionnaire system',
        externalErrorCode: 'E-00901',
        internalRemarks: '',
    },
    'I-00902': {
        internalInfo: 'Email has been registered',
        correspondingParts: 'questionnaire system',
        externalErrorCode: 'E-00902',
        internalRemarks: '',
    },
    'I-00903': {
        internalInfo: 'phone has been registered',
        correspondingParts: 'questionnaire system',
        externalErrorCode: 'E-00903',
        internalRemarks: '',
    },
    'I-01000': {
        internalInfo: 'Success',
        correspondingParts: 'inpatient',
        externalErrorCode: 'E-01000',
        internalRemarks: '',
    },
    'I-01001': {
        internalInfo: 'Invalid form name',
        correspondingParts: 'inpatient',
        externalErrorCode: 'E-01001',
        internalRemarks: '',
    },
    'I-01002': {
        internalInfo: 'Database query error: cannot query inpatient_template with form name',
        correspondingParts: 'inpatient',
        externalErrorCode: 'E-01002',
        internalRemarks: '',
    },
    'I-01003': {
        internalInfo: 'Database query error: form name does not exist',
        correspondingParts: 'inpatient',
        externalErrorCode: 'E-01003',
        internalRemarks: '',
    },
    'I-01100': {
        internalInfo: 'Success',
        correspondingParts: 'resource',
        externalErrorCode: 'E-01100',
        internalRemarks: '',
    },
    'I-01101': {
        internalInfo: 'Database query error: resource table is empty',
        correspondingParts: 'resource',
        externalErrorCode: 'E-01101',
        internalRemarks: '',
    },
    'I-01102': {
        internalInfo: 'Database connection problem',
        correspondingParts: 'resource',
        externalErrorCode: 'E-01102',
        internalRemarks: '',
    },
    'I-01103': {
        internalInfo: 'Database query error: document id does not exist',
        correspondingParts: 'resource',
        externalErrorCode: 'E-01103',
        internalRemarks: '',
    },
    'I-01104': {
        internalInfo: 'Invalid document id',
        correspondingParts: 'resource',
        externalErrorCode: 'E-01104',
        internalRemarks: '',
    },
    'I-01200': {
        internalInfo: 'Fetch pending list items error',
        correspondingParts: 'App Pending list service ',
        externalErrorCode: 'E-01200',
        internalRemarks: '',
    },
    'I-01201': {
        internalInfo: ' Cannot find such pending id',
        correspondingParts: 'App Pending list service ',
        externalErrorCode: 'E-01201',
        internalRemarks: '',
    },
    'I-01202': {
        internalInfo: ' Cannot delete such pending item',
        correspondingParts: 'App Pending list service ',
        externalErrorCode: 'E-01202',
        internalRemarks: '',
    },
    'I-01210': {
        internalInfo: 'Fail to fetch favorite diagnosis db',
        correspondingParts: 'favorite diagnosis',
        externalErrorCode: 'E-01210',
        internalRemarks: '',
    },
    'I-01211': {
        internalInfo: 'No clinic id',
        correspondingParts: 'favorite diagnosis',
        externalErrorCode: 'E-01211',
        internalRemarks: '',
    },
    'I-01212': {
        internalInfo: 'favorite diagnosis repeat',
        correspondingParts: 'favorite diagnosis',
        externalErrorCode: 'E-01212',
        internalRemarks: '',
    },
    'I-01213': {
        internalInfo: 'favorite diagnosis not exist',
        correspondingParts: 'favorite diagnosis',
        externalErrorCode: 'E-01213',
        internalRemarks: '',
    },
    'I-01214': {
        internalInfo: 'diagnosis id not exist',
        correspondingParts: 'favorite diagnosis',
        externalErrorCode: 'E-01214',
        internalRemarks: '',
    },
    'I-01215': {
        internalInfo: 'update favorite diagnosis fail',
        correspondingParts: 'favorite diagnosis',
        externalErrorCode: 'E-01215',
        internalRemarks: '',
    },
    'I-01216': {
        internalInfo: 'Favorite diagnosis empty',
        correspondingParts: 'favorite diagnosis',
        externalErrorCode: 'E-01216',
        internalRemarks: '',
    },
    'M-BM0000': {
        internalInfo: 'System error. Please check if transaction is done in consultation record.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-BM0000',
        internalRemarks: '',
    },
    'M-BM0001': {
        internalInfo: 'Transaction deleted. Please refresh the page.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-BM0001',
        internalRemarks: '',
    },
    'M-BM0002': {
        internalInfo: 'Transaction deleted. Please refresh the page.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-BM0002',
        internalRemarks: '',
    },
    'M-BM0003': {
        internalInfo: 'Transaction deleted. Please refresh the page.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-BM0003',
        internalRemarks: '',
    },
    'M-BM0004': {
        internalInfo: 'System error. Please check if transaction is done in consultation record.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-BM0004',
        internalRemarks: '',
    },
    'M-BM0005': {
        internalInfo: 'System error. Please check if transaction is done in consultation record.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-BM0005',
        internalRemarks: '',
    },
    'M-BM0006': {
        internalInfo: 'System error. Please check if transaction is done in consultation record.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-BM0006',
        internalRemarks: '',
    },
    'M-BM0007': {
        internalInfo: 'System error. Please check if transaction is done in consultation record.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-BM0007',
        internalRemarks: '',
    },
    'M-BM0008': {
        internalInfo: 'System error. Please check if transaction is done in consultation record.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-BM0008',
        internalRemarks: '',
    },
    'M-BM0009': {
        internalInfo: 'The patient is not eligible for the requested treatment.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-BM0009',
        internalRemarks: '',
    },
    'M-BM0010': {
        internalInfo: 'The patient is not eligible for the requested treatment.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-BM0010',
        internalRemarks: '',
    },
    'M-BM0011': {
        internalInfo: 'The patient is not eligible for the requested treatment.Please contact the insurance company.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-BM0011',
        internalRemarks: '',
    },
    'M-N0000': {
        internalInfo:
            'System error. Possibly because Mediconcen backend cannot find your insurer info to submit to blockchain.ts. Please ask Mediconcen admin to check if admin portal has entered proper information ',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-N0000',
        internalRemarks: '',
    },
    'M-NM0001': {
        internalInfo: 'The verify QR Code is invalid. Please refresh.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-NM0001',
        internalRemarks: '',
    },
    'M-NM0002': {
        internalInfo: 'The verify QR Code has expired. Please refresh.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-NM0002',
        internalRemarks: '',
    },
    'M-NM0003': {
        internalInfo: 'The verify QR Code is invalid. Please refresh.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-NM0003',
        internalRemarks: '',
    },
    'M-NM0004': {
        internalInfo: 'QR Code type mismatch. Please check if correct verification QR code is used but not payment QR code',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-NM0004',
        internalRemarks: '',
    },
    'M-NM0005': {
        internalInfo: 'The verify QR Code is invalid. Please refresh.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-NM0005',
        internalRemarks: '',
    },
    'M-NM0006': {
        internalInfo: 'The verify QR Code is invalid. Please refresh.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-NM0006',
        internalRemarks: '',
    },
    'M-NM0007': {
        internalInfo: 'Cannot find the code in blockchain.ts. Please refresh.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-NM0007',
        internalRemarks: '',
    },
    'M-NM0008': {
        internalInfo: 'Invalid QR Code, please ask patient to refresh and present a new QR code',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-NM0008',
        internalRemarks: '',
    },
    'M-NM0009': {
        internalInfo: 'Transaction record not found.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-NM0009',
        internalRemarks: '',
    },
    'M-BC0003': {
        internalInfo: 'System error. Please check if transaction is done in consultation record.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-BC0003',
        internalRemarks: '',
    },
    'M-BC0004': {
        internalInfo: 'The payment QR Code is invalid. Please refresh the QR Code.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-BC0004',
        internalRemarks: '',
    },
    'M-BC0005': {
        internalInfo: 'System error. Please check if transaction is done in consultation record.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-BC0005',
        internalRemarks: '',
    },
    'M-BC0006': {
        internalInfo: 'The patient is not eligible for the requested treatment.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-BC0006',
        internalRemarks: '',
    },
    'M-BC0007': {
        internalInfo: 'System error. Please check if transaction is done in consultation record.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-BC0007',
        internalRemarks: '',
    },
    'M-BC0008': {
        internalInfo: 'The payment QR Code is invalid. Please refresh the QR Code.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-BC0008',
        internalRemarks: '',
    },
    'M-GC0001': {
        internalInfo: 'The payment QR Code is invalid. Please refresh the QR Code.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-GC0001',
        internalRemarks: '',
    },
    'M-GC0002': {
        internalInfo: 'The payment QR Code is invalid. Please refresh the QR Code.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-GC0002',
        internalRemarks: '',
    },
    'M-GC0004': {
        internalInfo: 'The payment QR Code is invalid. Please refresh the QR Code.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-GC0004',
        internalRemarks: '',
    },
    'M-GC0006': {
        internalInfo: 'The payment QR Code is invalid. Please refresh the QR Code.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'M-GC0006',
        internalRemarks: '',
    },
    'W1001': {
        internalInfo: 'Invalid medical group',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1001',
        internalRemarks: '',
    },
    'W1002': {
        internalInfo: 'Reference number NOT provided',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1002',
        internalRemarks: '',
    },
    'W1003': {
        internalInfo: 'Reference number duplicated',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1003',
        internalRemarks: '',
    },
    'W1004': {
        internalInfo: 'Invalid user ID',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1004',
        internalRemarks: '',
    },
    'W1005': {
        internalInfo: 'Login failure',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1005',
        internalRemarks: '',
    },
    'W1006': {
        internalInfo: 'Invalid date of service',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1006',
        internalRemarks: '',
    },
    'W1007': {
        internalInfo: 'Date of service beyond backdate allowable period',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1007',
        internalRemarks: '',
    },
    'W1008': {
        internalInfo: 'Insured information NOT provided',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1008',
        internalRemarks: '',
    },
    'W1009': {
        internalInfo: 'Incorrect Insured information Format',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1009',
        internalRemarks: '',
    },
    'W1010': {
        internalInfo: 'Doctor code NOT provided',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1010',
        internalRemarks: '',
    },
    'W1011': {
        internalInfo: 'Invalid doctor code',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1011',
        internalRemarks: '',
    },
    'W1012': {
        internalInfo: 'Invalid request ticket',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1012',
        internalRemarks: '',
    },
    'W1013': {
        internalInfo: 'Request ticket NOT provided',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1013',
        internalRemarks: '',
    },
    'W1014': {
        internalInfo: 'Request ticket duplicated',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1014',
        internalRemarks: '',
    },
    'W1015': {
        internalInfo: 'Invalid length of password',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1015',
        internalRemarks: '',
    },
    'W1016': {
        internalInfo: 'Password NOT provided',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1016',
        internalRemarks: '',
    },
    'W1017': {
        internalInfo: 'Invalid length of member key',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1017',
        internalRemarks: '',
    },
    'W1018': {
        internalInfo: 'Member key NOT provided',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1018',
        internalRemarks: '',
    },
    'W1019': {
        internalInfo: 'Invalid length of location',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1019',
        internalRemarks: '',
    },
    'W1020': {
        internalInfo: 'Location NOT provided',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1020',
        internalRemarks: '',
    },
    'W1021': {
        internalInfo: 'Invalid benefit',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1021',
        internalRemarks: '',
    },
    'W1022': {
        internalInfo: 'Benefit NOT provided',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1022',
        internalRemarks: '',
    },
    'W1023': {
        internalInfo: 'Invalid length of service type',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1023',
        internalRemarks: '',
    },
    'W1024': {
        internalInfo: 'Service type NOT provided',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1024',
        internalRemarks: '',
    },
    'W1025': {
        internalInfo: 'Invalid length of diagnosis',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1025',
        internalRemarks: '',
    },
    'W1026': {
        internalInfo: 'Diagnosis NOT provided',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1026',
        internalRemarks: '',
    },
    'W1027': {
        internalInfo: 'Invalid length of voucher no.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1027',
        internalRemarks: '',
    },
    'W1028': {
        internalInfo: 'Voucher no. NOT provided',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1028',
        internalRemarks: '',
    },
    'W1029': {
        internalInfo: 'Voucher no. duplicated',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1029',
        internalRemarks: '',
    },
    'W1030': {
        internalInfo: 'Invalid claim amount',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1030',
        internalRemarks: '',
    },
    'W1031': {
        internalInfo: 'Claim amount NOT provided',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1031',
        internalRemarks: '',
    },
    'W1032': {
        internalInfo: 'Invalid extra medication amount',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1032',
        internalRemarks: '',
    },
    'W1033': {
        internalInfo: 'Extra medication amount NOT provided',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1033',
        internalRemarks: '',
    },
    'W1034': {
        internalInfo: 'Invalid sick leave',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1034',
        internalRemarks: '',
    },
    'W1035': {
        internalInfo: 'Sick leave NOT provided',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1035',
        internalRemarks: '',
    },
    'W1036': {
        internalInfo: 'Medical group NOT provided',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1036',
        internalRemarks: '',
    },
    'W1037': {
        internalInfo: 'User ID NOT provided',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1037',
        internalRemarks: '',
    },
    'W1038': {
        internalInfo: 'Service date NOT provided',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1038',
        internalRemarks: '',
    },
    'W1039': {
        internalInfo: 'Invalid member key',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1039',
        internalRemarks: '',
    },
    'W1040': {
        internalInfo: 'Invalid voucher no.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1040',
        internalRemarks: '',
    },
    'W1043': {
        internalInfo: 'Insured information record not found',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W1043',
        internalRemarks: '',
    },
    'W9001': {
        internalInfo: 'System not available',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W9001',
        internalRemarks: '',
    },
    'W9002': {
        internalInfo: 'Insurer replies that your physical card number input is possibly incorrect. Please try again.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'W9002',
        internalRemarks: '',
    },
    'B0000': {
        internalInfo: 'Valid insured person / Claim submitted / Claim voucher voided',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'B0000',
        internalRemarks: '',
    },
    'B1001': {
        internalInfo: 'Invalid doctor code',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'B1001',
        internalRemarks: '',
    },
    'B1002': {
        internalInfo: 'Doctor code terminated',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'B1002',
        internalRemarks: '',
    },
    'B1003': {
        internalInfo: 'Invalid insured person',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'B1003',
        internalRemarks: '',
    },
    'B1004': {
        internalInfo: 'Medical card not yet effective',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'B1004',
        internalRemarks: '',
    },
    'B1005': {
        internalInfo: 'Insured person terminated',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'B1005',
        internalRemarks: '',
    },
    'B1006': {
        internalInfo: 'Medical card not accepted at this clinic',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'B1006',
        internalRemarks: '',
    },
    'B1007': {
        internalInfo: 'Insurance Policy is now being processed for renewal. Data needs updating and Healthcare Card (if any) is suspended during this period.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'B1007',
        internalRemarks: '',
    },
    'B1008': {
        internalInfo:
            'Your outpatient GP &/or SP consultation has exceeded maximum number of visits per policy year or exceeded maximum limit per policy year; and your Healthcare Card is suspended. If you have any queries, please call the service hotline on the back of your Healthcare Card.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'B1008',
        internalRemarks: '',
    },
    'B1009': {
        internalInfo: 'Credit Facility Services on hold. Healthcare Card is suspended.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'B1009',
        internalRemarks: '',
    },
    'B1010': {
        internalInfo: 'Benefit code incorrect / Dr Type and Benefit not match',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'B1010',
        internalRemarks: '',
    },
    'B1011': {
        internalInfo: 'Service type incorrect',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'B1011',
        internalRemarks: '',
    },
    'B1012': {
        internalInfo: 'Diagnosis code incorrect',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'B1012',
        internalRemarks: '',
    },
    'B1013': {
        internalInfo: 'Incorrect/duplicated voucher no.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'B1013',
        internalRemarks: '',
    },
    'B1014': {
        internalInfo: 'Claim amount incorrect',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'B1014',
        internalRemarks: '',
    },
    'B1015': {
        internalInfo: 'Extra medication not allowed',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'B1015',
        internalRemarks: '',
    },
    'B1016': {
        internalInfo: 'Invalid voucher no.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'B1016',
        internalRemarks: '',
    },
    'B1017': {
        internalInfo: 'Medical group not match with system',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'B1017',
        internalRemarks: '',
    },
    'B9001': {
        internalInfo: 'Please call the service hotline on the back of your Healthcare Card.',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'B9001',
        internalRemarks: '',
    },
    'formInvalid': {
        internalInfo: 'Information submitted by MCC system to Insurer has format problems ',
        correspondingParts: 'middleware Error',
        externalErrorCode: 'formInvalid',
        internalRemarks: '',
    },
    'I-99997': {
        internalInfo: 'The current API have been deprecated. Possibly you are using an outdated version. If you need any help',
        correspondingParts: 'API deprecation',
        externalErrorCode: 'E-99997',
        internalRemarks: '',
    },
    'I-99998': {
        internalInfo: 'Request validation schema error',
        correspondingParts: 'schema error',
        externalErrorCode: 'E-99998',
        internalRemarks: '',
    },
    'I-99999': {
        internalInfo: 'default unknown error',
        correspondingParts: 'default unknown error',
        externalErrorCode: 'E-99999',
        internalRemarks: '',
    },
};
